// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ice_cream_world_backend.models;

#nullable disable

namespace ice_cream_world_backend.Migrations
{
    [DbContext(typeof(IceCreamWorldContext))]
    partial class IceCreamWorldContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("ice_cream_world_backend.models.Flavor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Photo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ServingContainerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ServingContainerId");

                    b.ToTable("Flavors");
                });

            modelBuilder.Entity("ice_cream_world_backend.models.ServingContainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Photo")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("ServingContainers");
                });

            modelBuilder.Entity("ice_cream_world_backend.models.Flavor", b =>
                {
                    b.HasOne("ice_cream_world_backend.models.ServingContainer", null)
                        .WithMany("Flavors")
                        .HasForeignKey("ServingContainerId");
                });

            modelBuilder.Entity("ice_cream_world_backend.models.ServingContainer", b =>
                {
                    b.Navigation("Flavors");
                });
#pragma warning restore 612, 618
        }
    }
}
